create database HotelManagement

table tbl_RoomDetails
table tbl_Customer
table tbl_RoomAvailabilityLog
table tbl_Billing
table tbl_BookingAudit
table tbl_Ratings

create table tbl_RoomDetails(RoomTypeId varchar(10) primary key,
RoomType varchar(10),
Price numeric(10,2),
TotalRooms int);
insert into tbl_RoomDetails values('RT1','Non-AC',2500.00,20);
insert into tbl_RoomDetails values('RT2','AC',5000.00,20);
insert into tbl_RoomDetails values('RT3','Deluxe',10000.00,10);
insert into tbl_RoomDetails values('RT4','Suite',25000.00,10);
alter table tbl_RoomDetails alter column TotalRooms tinyint
alter table tbl_RoomDetails add  TotalRooms int 
update tbl_RoomDetails set TotalRooms=20 where RoomTypeId='RT1'
update tbl_RoomDetails set TotalRooms=20 where RoomTypeId='RT2'
update tbl_RoomDetails set TotalRooms=10 where RoomTypeId='RT3'
update tbl_RoomDetails set TotalRooms=10 where RoomTypeId='RT4'

create table tbl_Customer(CustomerId varchar(10) primary key,
FirstName varchar(10),
LastName varchar(10),
Contact numeric(10,0),
City varchar(20),
CheckIn smalldatetime,
CheckOut smalldatetime,
Numofadults int,
NumofKids int,
NumofRooms int,
RoomType varchar(10) foreign key references tbl_RoomDetails(RoomTypeId));
alter table tbl_Customer alter column FirstName varchar(30)
alter table tbl_Customer alter column LastName varchar(30)
alter table tbl_Customer alter column Contact varchar(10)
alter table tbl_Customer alter column Numofadults tinyint
alter table tbl_Customer alter column NumofKids tinyint
alter table tbl_Customer alter column NumofRooms tinyint

create table tbl_RoomAvailabilityLog(RoomType varchar(10),
CheckIn smalldatetime,
NumofBookedRooms int,
NumofRoomsAvailable int);
alter table tbl_RoomAvailabilityLog alter column NumofBookedRooms tinyint
alter table tbl_RoomAvailabilityLog alter column NumofRoomsAvailable tinyint
alter table tbl_RoomAvailabilityLog add CustomerId varchar(10) foreign key references tbl_Customer(Customerid) on delete cascade

create table tbl_billing(CustomerId varchar(10) foreign key references tbl_Customer(Customerid),
RoomType varchar(10),
NumofRooms int,
TotalPrice numeric(10,0));
alter table tbl_billing alter column NumofRooms tinyint
alter table tbl_billing alter column TotalPrice numeric(10,2)
ALTER TABLE tbl_Billing
ADD CONSTRAINT deletecascade FOREIGN KEY (CustomerId) 
REFERENCES tbl_Customer(CustomerId)
ON DELETE CASCADE;

 
create table tbl_BookingAudit (booking text);

create table ratings(userid varchar(10) foreign key references tbl_Customer(CustomerId), Rating tinyint);
insert into tbl_Ratings values('user1',3)
insert into tbl_Ratings values('user2',5)
insert into tbl_Ratings values('user3',4.5)
insert into tbl_Ratings values('user4',2.5)
insert into tbl_Ratings values('user5',4)
insert into tbl_Ratings values('user6',5)
insert into tbl_Ratings values('user7',4)
insert into tbl_Ratings values('user9',4)
insert into tbl_Ratings values('user10',3.5)
alter table tbl_Ratings alter column Rating numeric(5,1)




exec sp_help tbl_Ratings
alter procedure sp_CustomerBooking
@CustomerId varchar(10),
@FirstName varchar(30),
@LastName varchar(30),
@Contact varchar(10),
@City varchar(20),
@CheckIn smalldatetime,
@CheckOut smalldatetime,
@Numofadults tinyint,
@NumofKids int,
@NumofRooms int,
@RoomType varchar(10)
as begin 
if(@CheckOut<@CheckIn)
begin
raiserror('Date and time of checkout must be after the checkin time',16,1);
end

else if((@Numofadults /@NumofRooms)>2)
begin
raiserror('Only 2 adults are allowed in a room, hence add a room',16,1);
end

else 
begin try
begin tran
insert into tbl_Customer values(@CustomerId ,@FirstName ,@LastName ,@Contact ,
@City ,
@CheckIn ,
@CheckOut ,
@Numofadults ,
@NumofKids ,
@NumofRooms ,
@RoomType )
commit tran

begin
declare @Booked int,@Total int,@RoomsAvailable int
select @Booked=sum(NumofRooms) from tbl_Customer where CheckIn=@CheckIn and RoomType=@RoomType
select @Total=TotalRooms from tbl_RoomDetails where RoomTypeId=@RoomType
select @RoomsAvailable=@Total -@Booked
begin tran
insert into tbl_RoomAvailabilityLog values(@RoomType,@CheckIn,@NumofRooms,@Roomsavailable,@CustomerId)
commit tran
end

begin 
declare @cost numeric(10,2)
declare @roomprice numeric(10,2)
select @roomprice= price from tbl_RoomDetails where RoomtypeId=@RoomType
select @cost=@NumofRooms*@roomprice
begin tran
insert into tbl_Billing values(@CustomerId,@RoomType,@NumofRooms,@cost)
commit tran
end
end try

begin catch
rollback tran
end catch
end

sp_CustomerBooking 'user1','Bhoomika','Hegde',9539390628,'Mangalore','2023-05-11 12:00:00','2023-05-12 12:00:00',2,0,1,'RT4'
sp_CustomerBooking 'user2','Adithi','Shetty',9539264260,'Bangalore','2023-05-11 12:00:00','2023-05-12 12:00:00',2,1,1,'RT2'
sp_CustomerBooking 'user3','Neha','Shetty',9524684290,'Bangalore','2023-05-12 12:00:00','2023-05-13 12:00:00',2,1,1,'RT2'
sp_CustomerBooking 'user4','Adithya','Bhat',8169346258,'Mangalore','2023-05-11 12:00:00','2023-05-12 12:00:00',4,1,2,'RT2'
sp_CustomerBooking 'user5','Harshith' ,'Salian',8866429319,'Chennai','2023-05-16 12:00:00','2023-05-18 12:00:00',6,0,3,'RT4' 
sp_CustomerBooking 'user6','Yashoda' ,'Moger',958624317,'Kasargod','2023-05-16 12:00:00','2023-05-17 12:00:00',12,4,6,'RT3' 
sp_CustomerBooking 'user7','Amith' ,'Bhat',8462531790,'Pune','2023-05-16 12:00:00','2023-05-17 12:00:00',4,2,2,'RT3' 
sp_CustomerBooking 'user8','Sunidhi' ,'Patwardhan',9764310825,'Bangalore','2023-05-16 12:00:00','2023-05-17',4,1,2,'RT1' 
sp_CustomerBooking 'user9','Arjun' ,'Shetty',1672948320,'Bangalore','2023-05-17 12:00:00','2023-05-18 12:00:00',2,0,1,'RT1' 
sp_CustomerBooking 'user10','Athiya' ,'Shetty',1672948320,'Bangalore','2023-05-17 12:00:00','2023-05-17 12:00:00',6,0,3,'RT1' 
sp_CustomerBooking 'user11','Swathi' ,'P',815236975,'Bangalore','2023-05-17 12:00:00','2023-05-18 12:00:00',5,1,3,'RT2' 
sp_CustomerBooking '','','',,'','','',,,,''


select * from tbl_Customer
select * from tbl_RoomAvailabilityLog
select * from tbl_Billing
select * from tbl_BookingAudit
select * from tbl_Ratings
select * from tbl_RoomDetails

alter procedure usp_Availability
as begin
select CheckIn,RoomType,sum(NumofRooms) as booked from tbl_Customer group by CheckIn,RoomType order by CheckIn,RoomType
end
usp_Availability

alter procedure usp_Ratings(@RoomType varchar(10))
as begin select Roomtype,avg(Rating) as Average_Ratings from tbl_Ratings as r join tbl_Customer as c on r.userid=c.CustomerId  group by RoomType having RoomType=@RoomType
end
usp_Ratings 'RT2'

alter trigger tr_CustomerInsert
on tbl_Customer for insert as 
begin
declare @userid varchar(5),@rooms int,@roomtype varchar(20),@numrooms int,@checkin smalldatetime,@checkout smalldatetime
select @userid=CustomerId,@rooms=NumofRooms,@checkin=CheckIn,@checkout=CheckOut,@roomtype=r.RoomType from inserted as i join tbl_RoomDetails as r on i.RoomType=r.RoomTypeId
insert into tbl_BookingAudit  values('User with id '+cast(@userid as varchar)+' has booked '+cast(@rooms as varchar)+@roomtype+' rooms  '+cast(@checkin as varchar)+' to '+cast(@checkout as varchar))
end

create trigger tr_InsertCompletion
on tbl_Customer
for insert as
begin
print('The booking has been successfully completed');
end

alter trigger tr_delete
  on tbl_Customer
  for delete as begin declare @id varchar(10)
  select @id=CustomerId
  from deleted  
  insert into tbl_BookingAudit
  values('Customer with id ='+@id +' has cancelled their room booking')
  end
delete from tbl_Customer where CustomerId='user11'

alter trigger tr_UpdateRatings 
  on tbl_Ratings
  for update as begin
  declare @id varchar(10)
  declare @oldrating numeric(10,1),@newrating numeric(10,1)
  declare @AuditText varchar(1000)
  select * into #temptable from inserted 
  begin
  set @AuditText=''
  select top 1 @id=userid,@newrating=Rating from #temptable
  select @rating=rating from deleted where userid=@id
  if(@oldrating<>@newrating)
  set @AuditText='Customer with id '+cast(@id as varchar)+' has changed ratings from '+cast(@oldrating as varchar)+' to '+cast(@newrating as varchar)

  insert into tbl_BookingAudit values(@AuditText)
  delete from #temptable where userid=@id
  end
  end
  update tbl_Ratings set Rating=3.0 where userid='user1'
delete from tbl_Ratings where userid='user1'

alter trigger tr_CustomerUpdate
  on tbl_Customer
  for update as begin 
  declare @id varchar(10)
  declare @oldCheckOut smalldatetime,@newCheckOut smalldatetime
  declare @oldCheckIn smalldatetime,@newCheckIn smalldatetime
  declare @oldroomtype varchar(10),@newroomtype varchar(10)
  declare @AuditText varchar(1000)
  select * into #temptable from inserted
  while(exists(select CustomerId from #temptable))
  begin
  set @AuditText=''
  select top 1 @id=CustomerId,@newCheckIn=CheckIn,@newCheckOut=CheckOut,@newroomtype=RoomType from #temptable
  select @oldCheckIn=CheckIn,@oldCheckOut=CheckOut,@oldroomtype=RoomType from deleted where CustomerId=@id
  set @AuditText='Customer with id='+cast(@id as varchar)+'changed'
  if (@oldCheckIn<> @newCheckIn )
  set @AuditText=@AuditText+'CheckIn date from'+cast(@oldCheckIn as varchar) +' to '+cast(@newCheckIn as varchar)
  if(@oldCheckOut <>@newCheckOut)
  set @AuditText=@AuditText+'CheckOut date from'+cast(@oldCheckOut  as varchar)+' to '+cast(@newCheckOut as varchar)
  if(@oldroomtype <>@newroomtype)
  set @AuditText=@AuditText+'RoomType from'+cast(@oldroomtype  as varchar)+' to '+cast(@newroomtype as varchar)
  insert into tbl_BookingAudit values (@AuditText)
  delete from #temptable where CustomerId=@id
  end
  end
update tbl_Customer set RoomType='RT3' where CustomerId='user9'


delete  tbl_Customer
delete  tbl_Billing
delete  tbl_BookingAudit
delete tbl_RoomAvailabilityLog
delete tbl_Ratings